version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: circleci/ruby:2.4.1-node
        environment:
          RAILS_ENV: test
      - image: docker pull circleci/mysql:5.6
        environment:
          MYSQL_USER: root
          MYSQL_HOST: "127.0.0.1"
          MYSQL_ROOT_HOST: %
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: circleci_test
    steps:
      - checkout
      - restore_cache:
          key: rails-circleci-test-{{ checksum "Gemfile.lock" }}
      - run:
          name: install dependencies
          command: bundle install --jobs=4 --path vendor/bundle
      - save_cache:
          key: rails-circleci-test-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: run test
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress "${TEST_FILES}"

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  build-production:
    working_directory: /app
    docker:
      image: circleci/ruby:2.4.1-node
      environment:
        RAILS_ENV: production
      steps:
        - checkout
        - restore_cache:
            key: production-vendor-bundle-{{ checksum "Gemfile.lock" }}
        - run:
            name: install dependencies
            command: bundle install --deployment --jobs=4 --without development test --path vendor/bundle
        - save_cache:
            key: production-vendor-bundle-{{ checksum "Gemfile.lock" }}
            paths:
              - vendor/bundle
        - run:
            name: asset compile
            command: bundle exec rake assets:precompile
        - run:
            name: package production source
            command: |
              /app/bin/package.sh
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - build-production
